buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
			url 'https://plugins.gradle.org/m2/'
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'nu.studer:gradle-jooq-plugin:2.0.11'
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'java-library'
apply plugin: 'checkstyle'
apply plugin: 'nu.studer.jooq'
checkstyle {
	toolVersion = '7.2'
}

group = 'com.test'
//version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.9
targetCompatibility = 1.9

repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

ext {
	springCloudVersion = 'Edgware.SR1'
}

dependencies {

	compile('org.springframework.boot:spring-boot-starter-data-ldap')
	compile('org.springframework.boot:spring-boot-starter-data-redis')
	compile('org.springframework.boot:spring-boot-starter-mail')
	// compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-websocket')


	/* 마이바티스 설정 */
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0')

	runtime('mysql:mysql-connector-java')

	compileOnly('org.projectlombok:lombok:1.16.20')

	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')

	/* implementation: 내부에서만 보여지는 라이브러리 */
	implementation 'org.mariadb.jdbc:mariadb-java-client:2.1.2'

	/* embed tomcat & JSTL */
	compile('org.apache.tomcat.embed:tomcat-embed-jasper')
	compile('javax.servlet:jstl:1.2')

	/* FREEMARKER */
//	compile group: 'org.freemarker', name: 'freemarker', version: '2.3.14'
	/* THYMELEAF */
	compile "org.springframework.boot:spring-boot-starter-thymeleaf"
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.5.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.5.0'
	compile group: 'redis.clients', name: 'jedis', version: '2.9.0'

	compile 'org.jooq:jooq'
	jooqRuntime group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
	jooqRuntime group: 'javax.xml', name: 'jaxb-impl', version: '2.1'
	jooqRuntime group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.0'
	jooqRuntime group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
	jooqRuntime group: 'javax.activation', name: 'javax.activation-api', version: '1.2.0'
	jooqRuntime 'mysql:mysql-connector-java'
}

jooq {
	sample(sourceSets.main) {
		jdbc {
			driver = 'com.mysql.jdbc.Driver'
			url = 'jdbc:mysql://wnwo9037.iptime.org:3306/kakaobot'
			user = 'wnwo'
			password = '51158128'
		}
		generator {
			database {
				name = 'org.jooq.util.mysql.MySQLDatabase'
				inputSchema = 'kakaobot'
			}
			generate {
				relations = true
				deprecated = false
				records = true
				immutablePojos = true
				fluentSetters = true
			}
			target {
				packageName = 'nu.studer.sample'
			}
		}
	}
}

project.tasks.getByName('compileJava').dependsOn -= 'generateSampleJooqSchemaSource'